{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/Nav.js\";\nimport React, { useState } from \"react\";\nimport { Navbar, Button, Modal, Form } from \"react-bootstrap\";\nexport default function Nav(props) {\n  const [show, setShow] = useState(null);\n  const [showRegister, setShowRegister] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginShow = async e => {\n    setShow(e); // const data = await fetch(\"http://localhost:5000/event\");\n    // const events = await data.json();\n  };\n\n  const registerShow = e => {\n    setShowRegister(e);\n  };\n\n  const loginFunc = async e => {\n    try {\n      e.preventDefault();\n      const loginData = {\n        email,\n        password\n      };\n      const res = await fetch(\"http://localhost:5000/auth\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(loginData)\n      });\n      const data = await res.json();\n      localStorage.setItem(\"token\", data.token); // todo: setState user object\n\n      props.setUser({ ...data.user,\n        isAuthenticated: true\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    setShow(false);\n  };\n\n  const registerFunc = async e => {\n    e.preventDefault();\n    const userData = {\n      name,\n      email,\n      password\n    }; // eslint-disable-next-line\n\n    const newRegister = await fetch(\"http://localhost:5000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    registerShow(false);\n  };\n\n  const logOut = () => {\n    props.setUser({\n      isAuthenticated: false\n    });\n    localStorage.removeItem(\"token\");\n    window.location.reload(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    className: \"navBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    className: \"navText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"JoinMe\", /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  })), !props.user.isAuthenticated ? /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"navBtn\",\n    onClick: () => loginShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"navBtn\",\n    onClick: () => registerShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Register\")) : /*#__PURE__*/React.createElement(Button, {\n    id: \"navLogout\",\n    onClick: () => logOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Logout\"))), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => loginFunc(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => loginShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Login\")))), /*#__PURE__*/React.createElement(Modal, {\n    show: showRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Register New Account\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => registerFunc(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => registerShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Register\")))));\n}","map":{"version":3,"sources":["/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/Nav.js"],"names":["React","useState","Navbar","Button","Modal","Form","Nav","props","show","setShow","showRegister","setShowRegister","email","setEmail","name","setName","password","setPassword","loginShow","e","registerShow","loginFunc","preventDefault","loginData","res","fetch","method","headers","body","JSON","stringify","data","json","localStorage","setItem","token","setUser","user","isAuthenticated","err","console","log","registerFunc","userData","newRegister","logOut","removeItem","window","location","reload","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,IAAhC,QAA4C,iBAA5C;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMiB,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC7BV,IAAAA,OAAO,CAACU,CAAD,CAAP,CAD6B,CAE7B;AACA;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAID,CAAD,IAAO;AAC1BR,IAAAA,eAAe,CAACQ,CAAD,CAAf;AACD,GAFD;;AAIA,QAAME,SAAS,GAAG,MAAOF,CAAP,IAAa;AAC7B,QAAI;AACFA,MAAAA,CAAC,CAACG,cAAF;AACA,YAAMC,SAAS,GAAG;AAChBX,QAAAA,KADgB;AAEhBI,QAAAA;AAFgB,OAAlB;AAIA,YAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACpDC,QAAAA,MAAM,EAAE,MAD4C;AAEpDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF2C;AAKpDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,SAAf;AAL8C,OAA/B,CAAvB;AAOA,YAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC,EAdE,CAeF;;AACA5B,MAAAA,KAAK,CAAC6B,OAAN,CAAc,EAAE,GAAGL,IAAI,CAACM,IAAV;AAAgBC,QAAAA,eAAe,EAAE;AAAjC,OAAd;AACD,KAjBD,CAiBE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AAED9B,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAvBD;;AAyBA,QAAMiC,YAAY,GAAG,MAAOvB,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACG,cAAF;AACA,UAAMqB,QAAQ,GAAG;AACf7B,MAAAA,IADe;AAEfF,MAAAA,KAFe;AAGfI,MAAAA;AAHe,KAAjB,CAFgC,CAOhC;;AACA,UAAM4B,WAAW,GAAG,MAAMnB,KAAK,CAAC,6BAAD,EAAgC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoD;AAK7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAea,QAAf;AALuD,KAAhC,CAA/B;AAOAvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAhBD;;AAkBA,QAAMyB,MAAM,GAAG,MAAM;AACnBtC,IAAAA,KAAK,CAAC6B,OAAN,CAAc;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACAL,IAAAA,YAAY,CAACa,UAAb,CAAwB,OAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,SAAS,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACQ;AAAG,IAAA,KAAK,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADF,EAIG,CAAC1C,KAAK,CAAC8B,IAAN,CAAWC,eAAZ,gBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAE,MAAMpB,SAAS,CAAC,IAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAIC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA4B,IAAA,OAAO,EAAE,MAAME,YAAY,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,CADF,gBASC,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAuB,IAAA,OAAO,EAAE,MAAMyB,MAAM,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CADF,CADF,eAyBE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAErC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGW,CAAD,IAAOE,SAAS,CAACF,CAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEP,KAFT;AAGE,IAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEnC,QAFT;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMjC,SAAS,CAAC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,CADF,CAFF,CAzBF,eAoDE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAER,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGS,CAAD,IAAOuB,YAAY,CAACvB,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEL,IAFT;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEvC,KAFT;AAGE,IAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAiBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEnC,QAFT;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,WAAW,CAACE,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,eAyBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM/B,YAAY,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0BE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,CADF,CAFF,CApDF,CADF;AAwFD","sourcesContent":["import React, { useState } from \"react\";\nimport { Navbar, Button, Modal, Form } from \"react-bootstrap\";\n\nexport default function Nav(props) {\n  const [show, setShow] = useState(null);\n  const [showRegister, setShowRegister] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginShow = async (e) => {\n    setShow(e);\n    // const data = await fetch(\"http://localhost:5000/event\");\n    // const events = await data.json();\n  };\n\n  const registerShow = (e) => {\n    setShowRegister(e);\n  };\n\n  const loginFunc = async (e) => {\n    try {\n      e.preventDefault();\n      const loginData = {\n        email,\n        password,\n      };\n      const res = await fetch(\"http://localhost:5000/auth\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(loginData),\n      });\n      const data = await res.json();\n      localStorage.setItem(\"token\", data.token);\n      // todo: setState user object\n      props.setUser({ ...data.user, isAuthenticated: true });\n    } catch (err) {\n      console.log(err);\n    }\n\n    setShow(false);\n  };\n\n  const registerFunc = async (e) => {\n    e.preventDefault();\n    const userData = {\n      name,\n      email,\n      password,\n    };\n    // eslint-disable-next-line\n    const newRegister = await fetch(\"http://localhost:5000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n    registerShow(false);\n  };\n\n  const logOut = () => {\n    props.setUser({ isAuthenticated: false });\n    localStorage.removeItem(\"token\");\n    window.location.reload(true);\n  }\n\n  return (\n    <div>\n      <Navbar className=\"navBar\">\n        <div className=\"container\">\n          <Navbar.Brand className=\"navText\">\n            JoinMe<i class=\"fas fa-users\"></i>\n          </Navbar.Brand>\n          {!props.user.isAuthenticated \n          ?  <Form inline>\n              <Button className=\"navBtn\" onClick={() => loginShow(true)}>\n                Login\n              </Button>\n              <Button className=\"navBtn\"  onClick={() => registerShow(true)}>\n                Register\n              </Button>\n            </Form>\n          : <Button id=\"navLogout\" onClick={() => logOut()}>\n            Logout\n          </Button>\n          }\n        </div>\n      </Navbar>\n\n      {/* EVENT LIST */}\n\n      {/* LOGIN */}\n      <Modal show={show}>\n        <Modal.Header>Login</Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(e) => loginFunc(e)}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button onClick={() => loginShow(false)}>Cancel</Button>\n            <Button type=\"submit\">Login</Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      {/* REGISTER */}\n      <Modal show={showRegister}>\n        <Modal.Header>Register New Account</Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(e) => registerFunc(e)}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>User Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button onClick={() => registerShow(false)}>Cancel</Button>\n            <Button type=\"submit\">Register</Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}