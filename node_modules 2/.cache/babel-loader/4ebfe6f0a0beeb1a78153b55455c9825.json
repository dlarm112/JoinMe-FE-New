{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/Map.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { formatRelative } from \"date-fns\";\nimport mapStyles from \"../mapStyles\";\nimport { Paginations, EventModal } from \"./index\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nconst center = {\n  lat: 10.785478,\n  lng: 106.696847\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  disableDoubleClickZoom: true\n};\nexport default function Map(props) {\n  const [show, setShow] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [lng, setLng] = useState(\"\");\n\n  const handleShow = e => {\n    setShow(true);\n    setLat(e.latLng.lat());\n    setLng(e.latLng.lng());\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries\n  });\n  const [coordinates, setCoordinates] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [rightClick, setRightClick] = useState(null);\n  const [id, setId] = useState(null);\n  const [eventList, setEventList] = useState(null);\n  const [modalEvents, setModalEvents] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [maxPageNum, setMaxPageNum] = useState(1);\n  const markerOptions = {\n    clickable: true\n  }; // FETCH TO MAP MARKERS\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetch(`http://localhost:5000/event`);\n      const resp = await data.json();\n      setCoordinates(resp);\n      console.log(\"resp\", resp);\n    }\n\n    fetchData();\n  }, []); // FETCH TO PAGINATE\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetch(`http://localhost:5000/event/modal?page=${pageNum}`);\n      const resp = await data.json();\n      setModalEvents(resp.data);\n      setMaxPageNum(parseInt(resp.maxPageNum));\n    }\n\n    fetchData();\n  }, [pageNum]);\n\n  const eventShow = e => {\n    setEventList(e);\n  };\n\n  const deleteEvent = async e => {\n    e.preventDefault();\n    await fetch(`http://localhost:5000/event/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await fetch(\"http://localhost:5000/event\");\n    const resp = await data.json();\n    setCoordinates(resp);\n    setRightClick(null);\n  }; // DOUBLE CLICk MAP\n\n\n  const onMapClick = useCallback(event => {\n    handleShow(event);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  });\n  const panTo = useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  const detailPanTo = useCallback(id => {\n    console.log(\"afdfsafsd\", id);\n    const lat = id.lat;\n    const lng = id.lng;\n    console.log(lng, lat);\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n    setSelected(id);\n    eventShow(false);\n  }, []);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eventButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => eventShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Event List\")), /*#__PURE__*/React.createElement(Modal, {\n    show: eventList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, modalEvents.map(id => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Description: \", id.title), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => detailPanTo(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Details\"))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => eventShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(EventModal, {\n    lng: lng,\n    lat: lat,\n    show: show,\n    handleClose: handleClose,\n    handleShow: handleShow,\n    setCoordinates: setCoordinates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Locate, {\n    panTo: panTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paginations, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 14,\n    center: center,\n    options: options,\n    onDblClick: onMapClick,\n    onLoad: onMapLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, coordinates.map(coordinate => /*#__PURE__*/React.createElement(Marker, {\n    options: markerOptions,\n    key: coordinate._id,\n    position: {\n      lat: coordinate.lat,\n      lng: coordinate.lng\n    },\n    icon: {\n      url: \"/profilePic.jpeg\",\n      scaledSize: new window.google.maps.Size(4, 4, \"rem\", \"rem\"),\n      shape: new window.google.maps.Circle(),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(30, 30)\n    } // label={coordinate.title}\n    ,\n    title: coordinate.title // POP UP EVENT DETAILS\n    ,\n    onClick: () => {\n      setSelected(coordinate);\n      setRightClick(null);\n    },\n    onRightClick: () => {\n      setId(coordinate._id);\n      setRightClick(coordinate);\n      setSelected(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  })), rightClick ? /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: rightClick.lat,\n      lng: rightClick.lng\n    },\n    onCloseClick: () => setRightClick(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: e => deleteEvent(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, \"Delete?\"))) : null, selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    onCloseClick: () => setSelected(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, selected.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, selected.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"Start Time: \", selected.startTime), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"End Time: \", selected.endTime), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"Max Group Size: \", selected.maxGroupSize))) : null));\n}\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null, options);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"far fa-compass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Search({\n  panTo\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 10.785478,\n        lng: () => 106.696847\n      },\n      radius: 20 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const result = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(result[0]);\n        panTo({\n          lat,\n          lng\n        });\n      } catch (error) {\n        console.log(\"error\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    disabled: !ready,\n    placeholder: \"Enter an address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/Map.js"],"names":["React","useState","useCallback","useEffect","Button","Form","Modal","GoogleMap","useLoadScript","Marker","InfoWindow","formatRelative","mapStyles","Paginations","EventModal","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","disableDoubleClickZoom","Map","props","show","setShow","setLat","setLng","handleShow","e","latLng","handleClose","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_API_KEY","coordinates","setCoordinates","selected","setSelected","rightClick","setRightClick","id","setId","eventList","setEventList","modalEvents","setModalEvents","pageNum","setPageNum","maxPageNum","setMaxPageNum","markerOptions","clickable","fetchData","data","fetch","resp","json","console","log","parseInt","eventShow","deleteEvent","preventDefault","method","headers","onMapClick","event","mapRef","useRef","onMapLoad","map","current","panTo","setZoom","detailPanTo","title","coordinate","_id","url","scaledSize","window","google","maps","Size","shape","Circle","origin","Point","anchor","description","startTime","endTime","maxGroupSize","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Search","ready","value","suggestions","status","setValue","clearSuggestions","requestOptions","location","radius","address","result","error","target"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { formatRelative } from \"date-fns\";\nimport mapStyles from \"../mapStyles\";\nimport { Paginations, EventModal } from \"./index\";\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\",\n};\nconst center = {\n  lat: 10.785478,\n  lng: 106.696847,\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  disableDoubleClickZoom: true,\n};\n\nexport default function Map(props) {\n  const [show, setShow] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [lng, setLng] = useState(\"\");\n\n  const handleShow = (e) => {\n    setShow(true);\n    setLat(e.latLng.lat());\n    setLng(e.latLng.lng());\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries,\n  });\n\n  const [coordinates, setCoordinates] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [rightClick, setRightClick] = useState(null);\n  const [id, setId] = useState(null);\n  const [eventList, setEventList] = useState(null);\n  const [modalEvents, setModalEvents] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [maxPageNum, setMaxPageNum] = useState(1);\n\n  const markerOptions = {\n    clickable: true,\n  };\n\n  // FETCH TO MAP MARKERS\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetch(`http://localhost:5000/event`);\n      const resp = await data.json();\n      setCoordinates(resp);\n      console.log(\"resp\", resp);\n    }\n    fetchData();\n  }, []);\n\n  // FETCH TO PAGINATE\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetch(`http://localhost:5000/event/modal?page=${pageNum}`);\n      const resp = await data.json();\n      setModalEvents(resp.data);\n      setMaxPageNum(parseInt(resp.maxPageNum))\n    }\n    fetchData();\n  }, [pageNum]);\n\n  const eventShow = (e) => {\n    setEventList(e);\n  };\n\n  const deleteEvent = async (e) => {\n    e.preventDefault();\n    await fetch(`http://localhost:5000/event/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await fetch(\"http://localhost:5000/event\");\n    const resp = await data.json();\n    setCoordinates(resp);\n    setRightClick(null);\n  };\n\n  // DOUBLE CLICk MAP\n  const onMapClick = useCallback((event) => {\n    handleShow(event);\n  }, []);\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  });\n\n  const panTo = useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n  }, []);\n\n  const detailPanTo = useCallback((id) => {\n    console.log(\"afdfsafsd\", id);\n    const lat = id.lat;\n    const lng = id.lng;\n    console.log(lng, lat);\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n    setSelected(id);\n    eventShow(false);\n  }, []);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n\n  return (\n    <div>\n      {/* EVENT LIST */}\n      <div className=\"eventButton\">\n        <Button onClick={() => eventShow(true)}>Event List</Button>\n      </div>\n      <Modal show={eventList}>\n        {modalEvents.map((id) => (\n          <div>\n            <p>Description: {id.title}</p>\n            <Button onClick={() => detailPanTo(id)}>Details</Button>\n          </div>\n        ))}\n        <Button onClick={() => eventShow(false)}>Close</Button>\n      </Modal>\n      {/* MODAL */}\n      <EventModal\n        lng={lng}\n        lat={lat}\n        show={show}\n        handleClose={handleClose}\n        handleShow={handleShow}\n        setCoordinates={setCoordinates}\n      />\n      <Search panTo={panTo} />\n      <Locate panTo={panTo} />\n      <div className=\"pagination\">\n        <Paginations />\n      </div>\n\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={14}\n        center={center}\n        options={options}\n        onDblClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {coordinates.map((coordinate) => (\n          <Marker\n            options={markerOptions}\n            key={coordinate._id}\n            position={{ lat: coordinate.lat, lng: coordinate.lng }}\n            icon={{\n              url: \"/profilePic.jpeg\",\n              scaledSize: new window.google.maps.Size(4, 4, \"rem\", \"rem\"),\n              shape: new window.google.maps.Circle(),\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(30, 30),\n            }}\n            // label={coordinate.title}\n            title={coordinate.title}\n            // POP UP EVENT DETAILS\n            onClick={() => {\n              setSelected(coordinate);\n              setRightClick(null);\n            }}\n            onRightClick={() => {\n              setId(coordinate._id);\n              setRightClick(coordinate);\n              setSelected(null);\n            }}\n          ></Marker>\n        ))}\n        {rightClick ? (\n          <InfoWindow\n            position={{ lat: rightClick.lat, lng: rightClick.lng }}\n            onCloseClick={() => setRightClick(null)}\n          >\n            <div>\n              <Button type=\"submit\" onClick={(e) => deleteEvent(e)}>\n                Delete?\n              </Button>\n            </div>\n          </InfoWindow>\n        ) : null}\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => setSelected(null)}\n          >\n            <div>\n              <h2>{selected.title}</h2>\n              <p>{selected.description}</p>\n              <p>Start Time: {selected.startTime}</p>\n              <p>End Time: {selected.endTime}</p>\n              <p>Max Group Size: {selected.maxGroupSize}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nfunction Locate({ panTo }) {\n  return (\n    <button\n      className=\"locate\"\n      onClick={() => {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            panTo({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            });\n          },\n          () => null,\n          options\n        );\n      }}\n    >\n      <i class=\"far fa-compass\"></i>\n    </button>\n  );\n}\n\nfunction Search({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 10.785478, lng: () => 106.696847 },\n      radius: 20 * 1000,\n    },\n  });\n  return (\n    <div className=\"searchBar\">\n      <Combobox\n        onSelect={async (address) => {\n          setValue(address, false);\n          clearSuggestions();\n          try {\n            const result = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(result[0]);\n            panTo({ lat, lng });\n          } catch (error) {\n            console.log(\"error\");\n          }\n        }}\n      >\n        <ComboboxInput\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          disabled={!ready}\n          placeholder=\"Enter an address\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}