{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/Map.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { formatRelative } from \"date-fns\";\nimport mapStyles from \"../mapStyles\";\nimport { Button } from \"react-bootstrap\";\nimport EventModal from \"./EventModal\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nconst center = {\n  lat: 10.785478,\n  lng: 106.696847\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  disableDoubleClickZoom: true\n};\nconst [show, setShow] = useState(false);\nconst [lat, setLat] = useState('');\nconst [lng, setLng] = useState('');\n\nconst handleShow = e => {\n  setShow(true);\n  setLat(e.latLng.lat());\n  setLng(e.latLng.lng());\n};\n\nconst handleClose = () => {\n  setShow(false);\n};\n\nexport default function Map(props) {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries\n  });\n  const [coordinates, setCoordinates] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [submitted, setSubmitted] = useState(null); // DOUBLE CLICk MAP\n\n  const onMapClick = useCallback(event => {\n    props.handleShow(event);\n    console.log(\"Event Info:\", event);\n    setCoordinates(current => [...current, {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date()\n    }]);\n  }, [props]);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  });\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EventModal, {\n    lng: lng,\n    lat: lat,\n    show: show,\n    handleClose: handleClose,\n    handleShow: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 14,\n    center: center,\n    options: options,\n    onDblClick: onMapClick,\n    onLoad: onMapLoad,\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, coordinates.map(coordinate => /*#__PURE__*/React.createElement(Marker, {\n    key: coordinate.time.toISOString(),\n    position: {\n      lat: coordinate.lat,\n      lng: coordinate.lng\n    },\n    icon: {\n      url: \"/profilePic.jpeg\",\n      scaledSize: new window.google.maps.Size(50, 50),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(30, 30)\n    } // POP UP EVENT DETAILS\n    ,\n    onClick: () => {\n      setSelected(coordinate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selected.lat,\n      lng: selected.lng\n    },\n    onCloseClick: () => setSelected(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Event Title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Created: \", formatRelative(selected.time, new Date())))) : null), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.handleShow(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Click Me\"));\n}","map":{"version":3,"sources":["/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/Map.js"],"names":["React","useState","useCallback","GoogleMap","useLoadScript","Marker","InfoWindow","formatRelative","mapStyles","Button","EventModal","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","disableDoubleClickZoom","show","setShow","setLat","setLng","handleShow","e","latLng","handleClose","Map","props","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_API_KEY","coordinates","setCoordinates","selected","setSelected","submitted","setSubmitted","onMapClick","event","console","log","current","time","Date","mapRef","useRef","onMapLoad","map","coordinate","toISOString","url","scaledSize","window","google","maps","Size","origin","Point","anchor"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { formatRelative } from \"date-fns\";\nimport mapStyles from \"../mapStyles\";\nimport { Button } from \"react-bootstrap\";\nimport EventModal from \"./EventModal\"\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\",\n};\nconst center = {\n  lat: 10.785478,\n  lng: 106.696847,\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n  disableDoubleClickZoom: true,\n};\n\nconst [show, setShow] = useState(false);\nconst [lat, setLat] = useState('')\nconst [lng, setLng] = useState('')\n\n\nconst handleShow = (e) => {\n  setShow(true);\n  setLat(e.latLng.lat())\n  setLng(e.latLng.lng())\n};\nconst handleClose = () => {\n  setShow(false);\n};\n\nexport default function Map(props) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries,\n  });\n\n  const [coordinates, setCoordinates] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [submitted, setSubmitted] = useState(null);\n\n  // DOUBLE CLICk MAP\n  const onMapClick = useCallback(\n    (event) => {\n      props.handleShow(event);\n      console.log(\"Event Info:\", event);\n      setCoordinates((current) => [\n        ...current,\n        {\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng(),\n          time: new Date(),\n        },\n      ]);\n    },\n    [props]\n  );\n\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  });\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n  return (\n    <div className=\"container\">\n      <EventModal\n        lng={lng}\n        lat={lat}\n        show={show}\n        handleClose={handleClose}\n        handleShow={handleShow}\n      />\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={14}\n        center={center}\n        options={options}\n        onDblClick={onMapClick}\n        onLoad={onMapLoad}\n        className=\"map\"\n      >\n        {coordinates.map((coordinate) => (\n          <Marker\n            key={coordinate.time.toISOString()}\n            position={{ lat: coordinate.lat, lng: coordinate.lng }}\n            icon={{\n              url: \"/profilePic.jpeg\",\n              scaledSize: new window.google.maps.Size(50, 50),\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(30, 30),\n            }}\n            // POP UP EVENT DETAILS\n            onClick={() => {\n              setSelected(coordinate);\n            }}\n          />\n        ))}\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => setSelected(null)}\n          >\n            <div>\n              <h2>Event Title</h2>\n              <p>Created: {formatRelative(selected.time, new Date())}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n      <Button onClick={() => props.handleShow()}>Click Me</Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}