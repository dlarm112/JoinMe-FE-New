{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/MapSearch.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nexport default class SearchBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPlacesChanged = () => {\n      if (this.props.onPlacesChanged) {\n        this.props.onPlacesChanged(this.searchBox.getPlaces());\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      ref: \"input\"\n    }, this.props, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  componentDidMount() {\n    var input = ReactDOM.findDOMNode(this.refs.input);\n    this.searchBox = new google.maps.places.SearchBox(input);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n  }\n\n  componentWillUnmount() {\n    // https://developers.google.com/maps/documentation/javascript/events#removing\n    google.maps.event.clearInstanceListeners(this.searchBox);\n  }\n\n}\nSearchBox.propTypes = {\n  placeholder: React.PropTypes.string,\n  onPlacesChanged: React.PropTypes.func\n};","map":{"version":3,"sources":["/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/MapSearch.js"],"names":["React","ReactDOM","SearchBox","Component","onPlacesChanged","props","searchBox","getPlaces","render","componentDidMount","input","findDOMNode","refs","google","maps","places","addListener","componentWillUnmount","event","clearInstanceListeners","propTypes","placeholder","PropTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAQrDC,eARqD,GAQnC,MAAM;AACtB,UAAI,KAAKC,KAAL,CAAWD,eAAf,EAAgC;AAC9B,aAAKC,KAAL,CAAWD,eAAX,CAA2B,KAAKE,SAAL,CAAeC,SAAf,EAA3B;AACD;AACF,KAZoD;AAAA;;AAKrDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAO,MAAA,GAAG,EAAC;AAAX,OAAuB,KAAKH,KAA5B;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAMDI,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAGT,QAAQ,CAACU,WAAT,CAAqB,KAAKC,IAAL,CAAUF,KAA/B,CAAZ;AACA,SAAKJ,SAAL,GAAiB,IAAIO,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBb,SAAvB,CAAiCQ,KAAjC,CAAjB;AACA,SAAKJ,SAAL,CAAeU,WAAf,CAA2B,gBAA3B,EAA6C,KAAKZ,eAAlD;AACD;;AACDa,EAAAA,oBAAoB,GAAG;AACrB;AACAJ,IAAAA,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBC,sBAAlB,CAAyC,KAAKb,SAA9C;AACD;;AArBoD;AAAlCJ,S,CACZkB,S,GAAY;AACjBC,EAAAA,WAAW,EAAErB,KAAK,CAACsB,SAAN,CAAgBC,MADZ;AAEjBnB,EAAAA,eAAe,EAAEJ,KAAK,CAACsB,SAAN,CAAgBE;AAFhB,C","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class SearchBox extends React.Component {\n  static propTypes = {\n    placeholder: React.PropTypes.string,\n    onPlacesChanged: React.PropTypes.func\n  }\n  render() {\n    return <input ref=\"input\" {...this.props} type=\"text\"/>;\n  }\n  onPlacesChanged = () => {\n    if (this.props.onPlacesChanged) {\n      this.props.onPlacesChanged(this.searchBox.getPlaces());\n    }\n  }\n  componentDidMount() {\n    var input = ReactDOM.findDOMNode(this.refs.input);\n    this.searchBox = new google.maps.places.SearchBox(input);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n  }\n  componentWillUnmount() {\n    // https://developers.google.com/maps/documentation/javascript/events#removing\n    google.maps.event.clearInstanceListeners(this.searchBox);\n  }\n}"]},"metadata":{},"sourceType":"module"}