{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/EventForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Rheostat from \"rheostat\";\nexport default function EventForm(props) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [tempStartTime, setTempStartTime] = useState(\"\");\n  const [tempEndTime, setTempEndTime] = useState(\"\");\n  const [maxGroupSize, setMaxGroupSize] = useState(\"\");\n\n  const createEvent = async e => {\n    const lat = props.lat;\n    const lng = props.lng;\n    e.preventDefault();\n    const eventData = {\n      title,\n      description,\n      startTime,\n      endTime,\n      maxGroupSize,\n      lat,\n      lng\n    };\n    console.log(\"Event Data:\", eventData);\n    const newEvent = await fetch(\"http://localhost:5000/event\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(eventData)\n    });\n    props.handleClose();\n  };\n\n  const handleChange = e => {\n    setStartTime(e.values[0]);\n    setEndTime(e.values[1]);\n    setIsDragging(false);\n  };\n\n  const handleValuesUpdated = e => {\n    setTempStartTime(e.values[0]);\n    setTempEndTime(e.values[1]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: createEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Rheostat, {\n    min: 1,\n    max: 24,\n    values: [startTime, endTime],\n    onChange: handleChange,\n    onValuesUpdated: handleValuesUpdated //   onSliderDragMove={() => setIsDragging(true)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"$\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"maxGroupSize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Max Group Size\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    value: maxGroupSize,\n    onChange: e => setMaxGroupSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"JoinMe!\")));\n}","map":{"version":3,"sources":["/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/components/EventForm.js"],"names":["React","useState","Form","Button","Rheostat","EventForm","props","title","setTitle","description","setDescription","startTime","setStartTime","endTime","setEndTime","tempStartTime","setTempStartTime","tempEndTime","setTempEndTime","maxGroupSize","setMaxGroupSize","createEvent","e","lat","lng","preventDefault","eventData","console","log","newEvent","fetch","method","headers","body","JSON","stringify","handleClose","handleChange","values","setIsDragging","handleValuesUpdated","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Rheostat from \"rheostat\";\n\nexport default function EventForm(props) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [tempStartTime, setTempStartTime] = useState(\"\");\n  const [tempEndTime, setTempEndTime] = useState(\"\");\n  const [maxGroupSize, setMaxGroupSize] = useState(\"\");\n\n  const createEvent = async (e) => {\n    const lat = props.lat;\n    const lng = props.lng;\n    e.preventDefault();\n    const eventData = {\n      title,\n      description,\n      startTime,\n      endTime,\n      maxGroupSize,\n      lat,\n      lng,\n    };\n    console.log(\"Event Data:\", eventData);\n    const newEvent = await fetch(\"http://localhost:5000/event\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(eventData),\n    });\n    props.handleClose();\n  };\n\n  const handleChange = (e) => {\n    setStartTime(e.values[0]);\n    setEndTime(e.values[1]);\n    setIsDragging(false);\n  };\n  const handleValuesUpdated = (e) => {\n    setTempStartTime(e.values[0]);\n    setTempEndTime(e.values[1]);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={createEvent}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"description\">\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Form.Group>\n\n        <Rheostat\n          min={1}\n          max={24}\n          values={[startTime, endTime]}\n          onChange={handleChange}\n          onValuesUpdated={handleValuesUpdated}\n        //   onSliderDragMove={() => setIsDragging(true)}\n        />\n        <p>${}</p>\n\n        {/* <Form.Group controlId=\"startTime\">\n          <Form.Label>Start Time</Form.Label>\n          <Form.Control\n            type=\"number\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n          />\n          <Form.Text className=\"text-muted\">Enter start time</Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"endTime\">\n          <Form.Label>End Time</Form.Label>\n          <Form.Control\n            type=\"number\"\n            value={endTime}\n            onChange={(e) => setEndTime(e.target.value)}\n          />\n          <Form.Text className=\"text-muted\">Enter end time</Form.Text>\n        </Form.Group> */}\n\n        <Form.Group controlId=\"maxGroupSize\">\n          <Form.Label>Max Group Size</Form.Label>\n          <Form.Control\n            type=\"number\"\n            value={maxGroupSize}\n            onChange={(e) => setMaxGroupSize(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          JoinMe!\n        </Button>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}