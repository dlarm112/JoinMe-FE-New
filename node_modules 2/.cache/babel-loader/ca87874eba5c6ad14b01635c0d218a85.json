{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nfunction reducer(state = initialState, action) {\n  if (action.type === 'LOVE') {\n    state.count++;\n    state.boxArray.push(state.count);\n  } else if (action.type === 'Decrement' && state.count > 0) {\n    state.count = state.count - action.payload.num;\n    state.boxArray.pop();\n  } else if (action.type === 'Reset') {\n    state.count = 0;\n    state.boxArray = [];\n  } else if (action.type === 'ColorEach') {\n    state.boxArray[action.payload.id] = action.payload.value;\n  }\n\n  if (state.count >= 10) {\n    state.color = \"red\";\n  } else {\n    state.color = \"white\";\n  }\n\n  if (action.type == 'Color') {\n    state.color = action.payload.color;\n  }\n\n  if (action.type == 'ColorEach') {\n    state.color = action.payload.colorEach;\n  }\n\n  console.log(state.boxArray);\n  return { ...state\n  };\n}\n\nconst store = createStore(reducer);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/derek/Desktop/project/JoinMe-fe-DerekLarm/my-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","reducer","state","initialState","action","type","count","boxArray","push","payload","num","pop","id","value","color","colorEach","console","log","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAACC,YAAvB,EAAqCC,MAArC,EAA4C;AAC1C,MAAGA,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA0B;AACxBH,IAAAA,KAAK,CAACI,KAAN;AACAJ,IAAAA,KAAK,CAACK,QAAN,CAAeC,IAAf,CAAoBN,KAAK,CAACI,KAA1B;AACD,GAHD,MAGM,IAAIF,MAAM,CAACC,IAAP,KAAgB,WAAhB,IAAgCH,KAAK,CAACI,KAAN,GAAc,CAAlD,EAAoD;AACxDJ,IAAAA,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACI,KAAN,GAAcF,MAAM,CAACK,OAAP,CAAeC,GAA3C;AACAR,IAAAA,KAAK,CAACK,QAAN,CAAeI,GAAf;AAID,GANK,MAMA,IAAIP,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA4B;AAChCH,IAAAA,KAAK,CAACI,KAAN,GAAc,CAAd;AACAJ,IAAAA,KAAK,CAACK,QAAN,GAAiB,EAAjB;AACD,GAHK,MAGA,IAAIH,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAgC;AACpCH,IAAAA,KAAK,CAACK,QAAN,CAAeH,MAAM,CAACK,OAAP,CAAeG,EAA9B,IAAkCR,MAAM,CAACK,OAAP,CAAeI,KAAjD;AACD;;AACD,MAAGX,KAAK,CAACI,KAAN,IAAe,EAAlB,EAAqB;AACnBJ,IAAAA,KAAK,CAACY,KAAN,GAAc,KAAd;AACD,GAFD,MAEK;AACHZ,IAAAA,KAAK,CAACY,KAAN,GAAc,OAAd;AACD;;AACD,MAAGV,MAAM,CAACC,IAAP,IAAe,OAAlB,EAA0B;AACxBH,IAAAA,KAAK,CAACY,KAAN,GAAYV,MAAM,CAACK,OAAP,CAAeK,KAA3B;AACD;;AACD,MAAIV,MAAM,CAACC,IAAP,IAAe,WAAnB,EAA+B;AAC7BH,IAAAA,KAAK,CAACY,KAAN,GAAcV,MAAM,CAACK,OAAP,CAAeM,SAA7B;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACK,QAAlB;AAEA,SAAO,EAAC,GAAGL;AAAJ,GAAP;AACD;;AAED,MAAMgB,KAAK,GAAGlB,WAAW,CAACC,OAAD,CAAzB;AAEAL,QAAQ,CAACuB,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nfunction reducer(state=initialState, action){\n  if(action.type === 'LOVE'){\n    state.count++\n    state.boxArray.push(state.count)\n  }else if (action.type === 'Decrement'  && state.count > 0){\n    state.count = state.count - action.payload.num;\n    state.boxArray.pop()\n\n\n\n  }else if (action.type === 'Reset'){\n    state.count = 0\n    state.boxArray = []\n  }else if (action.type === 'ColorEach'){\n    state.boxArray[action.payload.id]=action.payload.value\n  }\n  if(state.count >= 10){\n    state.color = \"red\"\n  }else{\n    state.color = \"white\"\n  }\n  if(action.type == 'Color'){\n    state.color=action.payload.color\n  }\n  if (action.type == 'ColorEach'){\n    state.color = action.payload.colorEach\n  }\n  console.log(state.boxArray)\n\n  return {...state}\n}\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}